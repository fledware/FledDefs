
buildscript {
  ext {
    kotlinVersion="1.6.20"
    coroutineVersion="1.6.0"
    ktxVersion="1.10.0-rc1"
    jacksonVersion="2.13.1"
    junitVersion="5.8.2"
    slf4jVersion="1.7.35"
    semver4jVersion="3.1.0"
    log4jVersion="2.17.0"
    gdxVersion="1.10.0"
    eclipseCollectionsVersion="10.4.0"
    fledUtilsVersion="0.1.3-SNAPSHOT"
    fledEcsVersion="0.1.0-SNAPSHOT"
  }

  repositories {
    mavenLocal()
    mavenCentral()
    google()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'java-test-fixtures'
  apply plugin: 'kotlin'
  apply plugin: 'idea'
  compileJava {
    options.incremental = true
  }
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url "https://s01.oss.sonatype.org/content/repositories/releases/" }
    maven { url 'https://jitpack.io' }
  }
}

subprojects {
  version = new File('version.txt').text
  ext.appName = 'fledecs'

  dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testRuntimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    testRuntimeOnly "org.apache.logging.log4j:log4j-api:$log4jVersion"
    testRuntimeOnly "org.apache.logging.log4j:log4j-core:$log4jVersion"

    testFixturesImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testFixturesImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"
    testFixturesImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
  }

  test {
    useJUnitPlatform()
    testLogging {
      showStandardStreams = true
    }
    minHeapSize = "512m"
    maxHeapSize = "2048m"
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      jvmTarget = "11"
      freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
  }
}
